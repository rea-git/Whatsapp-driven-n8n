{
  "name": "WhatsApp -> Google Drive Assistant",
  "nodes": [
    {
      "parameters": {
        "path": "twilio-whatsapp",
        "httpMethod": "POST",
        "options": {}
      },
      "name": "Twilio Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 250]
    },
    {
      "parameters": {
        "functionCode": "// parse Twilio body into command + args\nconst body = (items[0].json.Body || items[0].json.body || '').trim();\nconst from = items[0].json.From || items[0].json.from || '';\nlet command = null; let args = '';\nconst m = body.match(/^(\\w+)\s*(.*)$/s);\nif(m){ command = m[1].toUpperCase(); args = (m[2]||'').trim(); }\nelse{ const parts = body.split(/\\s+/); command = parts[0].toUpperCase(); args = parts.slice(1).join(' '); }\nitems[0].json.command = command;\nitems[0].json.args = args;\nitems[0].json.from = from;\nreturn items;"
      },
      "name": "Parse Command",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [520, 250]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.command}}",
              "operation": "equals",
              "value2": "LIST"
            },
            {
              "value1": "={{$json.command}}",
              "operation": "equals",
              "value2": "SUMMARY"
            },
            {
              "value1": "={{$json.command}}",
              "operation": "equals",
              "value2": "DELETE"
            },
            {
              "value1": "={{$json.command}}",
              "operation": "equals",
              "value2": "MOVE"
            },
            {
              "value1": "={{$json.command}}",
              "operation": "equals",
              "value2": "CONFIRM_DELETE"
            }
          ]
        }
      },
      "name": "Command Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [760, 250]
    },

    {
      "parameters": {
        "operation": "list",
        "returnAll": true,
        "options": {}
      },
      "name": "Drive: List Files (folder)",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 1,
      "position": [1080, 120],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "=credentials.GoogleDriveOAuth2.id",
          "name": "GoogleDriveOAuth2"
        }
      }
    },

    {
      "parameters": {
        "functionCode": "// extract folder name from args (basic, single-level path)\nconst raw = $json.args || '';\nlet folder = raw.trim();\nif(folder.startsWith('/')) folder = folder.slice(1);\n// if they passed a path with spaces, take full rest as name\nitems[0].json.folder = folder || 'root';\nreturn items;"
      },
      "name": "Get Folder Name",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [920, 80]
    },

    {
      "parameters": {
        "functionCode": "// Build output message for listing (format from Drive result items)\nconst files = items[0].json.files || items.map(i=>i.json);\nif(!files || files.length===0){ items[0].json.reply = 'No files found.'; return items; }\nconst bullets = files.map(f=>`- ${f.name}  (${f.mimeType})`);\nitems[0].json.reply = bullets.join('\n');\nreturn items;"
      },
      "name": "Build List Reply",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1320, 120]
    },

    {
      "parameters": {
        "service": "twilio",
        "resource": "message",
        "operation": "create"
      }
    }